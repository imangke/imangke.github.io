I"?<p>[TOC]</p>

<hr />

<h1 id="python-学习提纲">Python 学习提纲</h1>

<h2 id="1-关于注释">1. 关于注释</h2>

<p>用#创建注释</p>

<h2 id="2--数据类型">2.  数据类型</h2>

<ol>
  <li>字符串用单引号或双引号</li>
  <li>字符</li>
  <li>整型数据</li>
  <li>浮点数据</li>
</ol>

<h2 id="3-常量和变量">3. 常量和变量</h2>

<p>增加与减少，x += 1或者 x -= 1</p>

<p>变量名命名规则有四个要求：</p>

<ul>
  <li>不能有空格，可能和连接下划线</li>
  <li>只能使用数字、字母、下划线</li>
  <li>不能以数字开头，尽量不用下划线，因为下划线开头的变量有特殊的用途</li>
  <li>不能使用python的关键字。<a href="http://theselftaughtprogrammer.io/keywords">这里可以查关键字</a></li>
</ul>

<h2 id="4语法错误与异常">4.语法错误与异常</h2>

<p>python有两种错误，一是语法错误，二如果不是语法错误的错误称为异常。</p>

<p>当碰到语法错误时，先找到出问题的那行代码，然后仔细查找并找到解决办法。如果没有头绪，可以上网查。</p>

<h2 id="5-算术操作符">5. 算术操作符</h2>

<p>指数运算：**</p>

<p>取模运算： %</p>

<p>整除运算：//</p>

<p>除法：/</p>

<p>乘法：*</p>

<p>加法： +</p>

<p>减法： -</p>

<p>操作符两边的值称为<strong>操作数</strong>，两个操作数和一个操作符共同构成一个<strong>表达式</strong></p>

<p><strong>运算顺序</strong>：<strong>PEMDAS</strong> 。括号parentheses、指数exponents、乘法multiplication、除法division、加法addition、减法substraction</p>

<h2 id="6-比较操作符">6. 比较操作符</h2>

<p>&lt;     &gt;     &gt;=     &lt;=     ==    !=</p>

<h2 id="7-逻辑操作符">7. 逻辑操作符</h2>

<p>and、or、not</p>

<h2 id="8-语句">8. 语句</h2>

<p>语句可以有<strong>简单语句</strong>和<strong>复合语句</strong>。复合句由一个或多个<strong>从句</strong>构成，从句包括两行或多行代码：<strong>代码头</strong> （header)及其随后的<strong>配套代码</strong>(suite)。代码头指从句中包括<strong>关键字</strong> 的那行代码，之后是一个<strong>冒号：</strong>，然后是一行或多行带<strong>缩进</strong>的代码。</p>

<ul>
  <li>
    <p>条件语句。</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>if somethign == "something":
	print("something")
else:
	print("something")
  	
  	
if something == "something"	:
	print("something")
elif something == "something":
	print("something")
elif something == "something":
	print("something")
else:
	print("something")
  	
</code></pre></div>    </div>

    <p>语句之间是可以有空行的，不会影响代码的执行，但有时候可以提高代码的可读性。</p>
  </li>
</ul>

<h2 id="9-函数">9. 函数</h2>

<p>定义函数：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="err">[</span><span class="nf">函数名</span><span class="p">]([</span><span class="n">逗号分隔开的参数</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">function1</span><span class="p">(</span><span class="n">p1</span><span class="p">,</span><span class="n">p2</span><span class="p">,</span><span class="n">p3</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"somethign"</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">something</span>
</code></pre></div></div>

<p>内置函数：（builtin function)</p>

<p>复用函数：</p>

<p>函数的必选及<strong>可选参数</strong>(optional parameter)：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">function1</span><span class="p">(</span><span class="n">p1</span><span class="p">,</span><span class="n">p2</span><span class="o">=</span><span class="n">something</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">something</span>
</code></pre></div></div>

<h2 id="10-作用域">10. 作用域</h2>

<p><strong>全局变量</strong>(blobal variable)  全局作用域（global scope) 和  <strong>局部变量</strong> 局部作用域（local scope)</p>

<h2 id="11-异常处理">11. 异常处理</h2>

<p>python中的每一个异常都是一个对象，<a href="https://wwww.tutorialspoint/python/standard_exceptions.html">查看所有内置异常</a>，如果你认为代码可能会报错，可以用try和except来捕获</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"please input a number"</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"please input another number"</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="k">try</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">)</span>
<span class="k">except</span> <span class="nb">ZeroDivisionError</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"b can not be zero"</span><span class="p">)</span>    
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"please input a number"</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">"please input another number"</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="c1">#如果输入的a不是数字而是字符串，如"hangbu",int(a)会出错。所以把整个语句都放到了tyr中
</span><span class="n">b</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="o">/</span><span class="n">b</span><span class="p">)</span>
<span class="k">except</span> <span class="p">(</span><span class="nb">ZeroDivisionError</span><span class="p">,</span><span class="nb">ValueError</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"invalid input"</span><span class="p">)</span>    
</code></pre></div></div>

<p>不要在except语句中使用在try中定义的变量，因为可能在你定义这个变量之前，异常就发生了。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
    <span class="n">a</span> <span class="o">=</span> <span class="mi">10</span><span class="o">/</span><span class="mi">0</span>
    <span class="n">b</span> <span class="o">=</span> <span class="s">"我还没有被定义"</span>
<span class="k">except</span> <span class="nb">ZeroDivisionError</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="c1">#这个print(b)执行不了，因为在b变量定义前ZeroDivisionError异常就已经发生了，还没来得及执行b的定义语句。
</span></code></pre></div></div>

<h2 id="12-文档字符串docstring">12. 文档字符串(docstring)</h2>

<p>文档字符串用于注释函数的功能。注释每个参数应该使用哪一种数据类型。通常放在函数的顶部。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">function1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">):</span>
    <span class="s">"""
    本函数的功能是什么什么什么东西
    :parameter x:int.
    :parameter y:int.
    :return: int , 值为x和y之和
    """</span>
    <span class="k">return</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span>
</code></pre></div></div>

<p>我们在编码时，尽可能都要加上文档字符串，有助于开发者快速编程，也供其它开发者以后阅读。</p>

<h2 id="13-有需要才使用变量">13. 有需要才使用变量</h2>

<p>后面的程序中确需要用到的数据，才有必要将其保存至变量。不要仅仅为了打印数据值就将其保存到变量中。</p>

<h2 id="14-容器">14. 容器</h2>

<p><strong>”愚者困惑，智者提问“</strong></p>

<p>学习三个容器：<strong>列表</strong>、<strong>元组</strong>、<strong>字典</strong></p>

<p>学习三个容器之前，了解一个概念，即<strong>对象的方法</strong>。万物皆对象。</p>

<h3 id="列表">列表：</h3>

<p>第一种方法使用list()创建。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fruit</span> <span class="o">=</span> <span class="nb">list</span><span class="p">()</span>
</code></pre></div></div>

<p>第二种方法，将希望放到列表中的所有对象填入到方括号中，用逗号分开，列表中元素可以是任何数据类型。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fruit</span> <span class="o">=</span> <span class="p">[</span><span class="s">"apple"</span><span class="p">,</span><span class="s">"orange"</span><span class="p">,</span><span class="s">"pear"</span><span class="p">]</span>
</code></pre></div></div>

<p><strong>列表中元素</strong>是有序的，可以使用append方法向列表中添加一个新元素，添加的元素在列表的末尾。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fruit</span> <span class="o">=</span> <span class="p">[</span><span class="s">"apple"</span><span class="p">,</span><span class="s">"pear"</span><span class="p">,</span><span class="s">"orange"</span><span class="p">]</span>
<span class="n">fruit</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"banana"</span><span class="p">)</span>
<span class="n">fruit</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">"Peach"</span><span class="p">)</span>
</code></pre></div></div>

<p>可以用Pop方法移去列表中最后一个元素。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s">"black"</span><span class="p">,</span><span class="s">"red"</span><span class="p">,</span><span class="s">"yellow"</span><span class="p">]</span>
<span class="n">colors1</span> <span class="o">=</span> <span class="n">colors</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
</code></pre></div></div>

<p>可以使用+号来合并两个列表</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">color1</span> <span class="o">=</span> <span class="p">[</span><span class="s">"red"</span><span class="p">]</span>
<span class="n">color2</span> <span class="o">=</span> <span class="p">[</span><span class="s">"black"</span><span class="p">]</span>
<span class="n">color3</span> <span class="o">=</span> <span class="n">color1</span> <span class="o">+</span> <span class="n">color2</span>
</code></pre></div></div>

<p>用in检查某个元素是不是在列表中，not in检查是不是不在列表中</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span><span class="s">"yellow"</span><span class="p">,</span><span class="s">"black"</span><span class="p">]</span>
<span class="s">"white"</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">colors</span>  <span class="c1">#结果为True
</span><span class="s">"red"</span> <span class="ow">in</span> <span class="n">colors</span> <span class="c1">#结果为True
</span></code></pre></div></div>

<p>使用len可获得列表的大小（元素的个数）</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">len</span><span class="p">(</span><span class="n">colors</span><span class="p">)</span>
</code></pre></div></div>

<p><strong>注意</strong> : 字符串、列表、元组都是<strong>可迭代的</strong> （iterable)。如果一个对象中的每一个元素可以使用循环访问的话，那么这个对象就是可迭代的，这样的对象称为<strong>可迭代对象</strong>，可迭代对象中每个元素都有一个<strong>索引</strong>(index)，即表示元素在可迭代对象中的位置的数字。第一个元素的索引值为0，而不是1。</p>

<p>可以使用 【列表名】【【索引】】获取一个元素。(用英文的方括号，会显示为链接，所以此处用中文的方括号，是不对的)</p>

<p>可以使用[列表名][[索引]]获取一个元素。（加一个\转义符就可以了，自己瞎摸的）</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fruit</span> <span class="o">=</span> <span class="p">[</span><span class="s">"apple"</span><span class="p">,</span><span class="s">"peach"</span><span class="p">,</span><span class="s">"orange"</span><span class="p">]</span>
<span class="n">fruit</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">fruit</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<p>列表是<strong>可变的</strong>(mutable),如果一个容器是可变的，那么可以向容器中增、删、修改对象。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">colors</span> <span class="o">=</span> <span class="p">[</span><span class="s">"red"</span><span class="p">,</span><span class="s">"green"</span><span class="p">,</span><span class="s">"yellow"</span><span class="p">]</span>
<span class="n">colors</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="s">"black"</span>  <span class="c1">#修改第二个元素值
</span></code></pre></div></div>

<h3 id="元组tuple">元组：（tuple)</h3>

<p>元组是不可变的，这一点与列表是不同的。用园括号表示元组，元素用逗号分开。有两种方式可以创建元组。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tuple1</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">()</span>
<span class="n">tuple2</span> <span class="o">=</span> <span class="p">()</span>
<span class="n">tuple3</span> <span class="o">=</span> <span class="p">(</span><span class="s">"hellow"</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<p>注意：如果元组中只有一个元素，后面也需要加上逗号的。不然计算机认不出来是不是元组。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="s">"self_taughte"</span><span class="p">,)</span>  <span class="c1"># 这是一个元组
</span><span class="p">(</span><span class="mi">9</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span>  <span class="c1">#这不是元组
</span><span class="nb">type</span><span class="p">((</span><span class="s">"9"</span><span class="p">))</span> <span class="c1"># str
</span><span class="nb">type</span><span class="p">((</span><span class="s">"9"</span><span class="p">,))</span> <span class="c1"># tuple
</span></code></pre></div></div>

<p>索引、in 、not in等在元组中一样使用。</p>

<h3 id="字典">字典</h3>

<p>字典是存储对象的容器，是内置容器。用来连接两个对象。一个对象叫<strong>健</strong>（key)，一个对象叫<strong>值</strong>（value）。这个连接叫<strong>映射</strong>，映射的结果就产生了一个<strong>健值对</strong>。可以通过键来查值，但不能通过值来键。</p>

<p>字典中存储的对象元素是无序的。字典的值可以是任意对象，键是不可变的。字符串或元组可以作为键，但列表或字典不可以</p>

<p>字典的价值在于健与值之间的关联。</p>

<p>用{}来创建字典。有两种方式创建。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dict1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
<span class="n">dict1</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">({</span><span class="s">"bill Gates"</span><span class="p">:</span><span class="s">"charitable"</span><span class="p">})</span>
<span class="n">dict2</span> <span class="o">=</span> <span class="p">{}</span>
<span class="n">dict3</span> <span class="o">=</span><span class="p">{</span><span class="s">"apple"</span><span class="p">:</span><span class="s">"red"</span><span class="p">,</span><span class="s">"banana"</span><span class="p">:</span><span class="s">"yellow"</span><span class="p">}</span>
<span class="n">dict3</span><span class="p">[</span><span class="s">"dog"</span><span class="p">]</span> <span class="o">=</span> <span class="s">"black"</span>  <span class="c1"># 添加 键-值对
</span><span class="n">dict3</span><span class="p">[</span><span class="s">"age"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">51</span>
</code></pre></div></div>

<p>可以使用in查看某个健是不是在字典中，但不能用于检查某个值是不是在字典中。not in也可以用的</p>

<p>可以使用del删除字典中的键值对</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">books</span> <span class="o">=</span> <span class="p">{</span><span class="s">"a"</span><span class="p">:</span><span class="s">"b"</span><span class="p">,</span><span class="s">"d"</span><span class="p">:</span><span class="s">"e"</span><span class="p">,</span><span class="s">"f"</span><span class="p">:</span><span class="s">"g"</span><span class="p">}</span>
<span class="k">del</span> <span class="n">books</span><span class="p">[</span><span class="s">"d"</span><span class="p">]</span>
</code></pre></div></div>

<h3 id="容器的嵌套">容器的嵌套</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">list1</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">list2</span> <span class="o">=</span><span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">]</span>
<span class="n">list3</span> <span class="o">=</span> <span class="p">[</span><span class="s">"c"</span><span class="p">,</span><span class="s">"d"</span><span class="p">]</span>
<span class="n">list1</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">list2</span><span class="p">)</span>
<span class="n">list1</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">list3</span><span class="p">)</span> 
<span class="c1"># 结果 list 1 = [["a","b"],["c","d"]]
#list1[0] 就是 ["a"，"b"]
</span></code></pre></div></div>

<p>慢慢学吧，有点绕头。</p>

<h2 id="15-字符串操作">15. 字符串操作</h2>

<p>”理论上来说，理论和实践没有区别。但实践上来说，是有区别的“</p>

<h3 id="三引号字符串">三引号字符串</h3>

<p>字符串跨越一行以上的可以用三引号</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">""" 第一行
	第二行
	第三行
"""</span>
</code></pre></div></div>

<h3 id="索引负索引">索引、负索引</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str1</span> <span class="o">=</span> <span class="s">"abcdefg"</span>
<span class="n">str1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="nb">str</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<h3 id="字符串的拼接">字符串的拼接</h3>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"cat"</span><span class="o">+</span><span class="s">"dog"</span>
</code></pre></div></div>

<h3 id="字符串的乘法">字符串的乘法</h3>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"cat"</span><span class="o">*</span><span class="mi">3</span>
</code></pre></div></div>

<h3 id="字符串改变大小写">字符串改变大小写</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"dog"</span><span class="p">.</span><span class="n">upper</span><span class="p">()</span>
<span class="s">"DOG"</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span>
</code></pre></div></div>

<h3 id="字符串的格式化">字符串的格式化</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"{}strs{}strs{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="s">"x"</span><span class="p">,</span><span class="s">"y"</span><span class="p">,</span><span class="s">"z"</span><span class="p">)</span> <span class="c1"># 结果为"xstrsystrsz"
</span></code></pre></div></div>

<h3 id="分割">分割</h3>

<p>分割的结果是列表。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">"my name is zkx,what is your name?"</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">","</span><span class="p">)</span>
<span class="p">[</span><span class="s">'my name is zkx'</span><span class="p">,</span> <span class="s">'what is your name?'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"my name is zkx,your name is liwang,his name is wange"</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">","</span><span class="p">)</span>
<span class="p">[</span><span class="s">'my name is zkx'</span><span class="p">,</span> <span class="s">'your name is liwang'</span><span class="p">,</span> <span class="s">'his name is wange'</span><span class="p">]</span>
</code></pre></div></div>

<h3 id="连接">连接</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">"**"</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">"abc"</span><span class="p">)</span>
<span class="s">'a**b**c'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"好人"</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">"你我他"</span><span class="p">)</span>
<span class="s">'你好人我好人他'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"+"</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="s">"abc"</span><span class="p">)</span>
<span class="s">'a+b+c'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">str1</span><span class="o">=</span><span class="s">"abc"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"="</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">str1</span><span class="p">)</span>
<span class="s">'a=b=c'</span>
</code></pre></div></div>

<p>”“.join(字符串列表) 空字符串“”。或者”  “.join(字符串列表)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">list1</span> <span class="o">=</span> <span class="p">[</span><span class="s">"a"</span><span class="p">,</span><span class="s">"b"</span><span class="p">,</span><span class="s">"c"</span><span class="p">,</span><span class="s">"d"</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">list1</span><span class="p">)</span>
<span class="s">'abcd'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">""</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="s">"zkx"</span><span class="p">,</span><span class="s">"is"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"good"</span><span class="p">,</span><span class="s">"man"</span><span class="p">])</span>
<span class="s">'zkxisagoodman'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"   "</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="s">"zkx"</span><span class="p">,</span><span class="s">"is"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"good"</span><span class="p">,</span><span class="s">"man"</span><span class="p">])</span>
<span class="s">'zkx   is   a   good   man'</span>
</code></pre></div></div>

<h3 id="去除空格">去除空格</h3>

<p>去除开关或末尾的空格</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">"     zkx      "</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span>
<span class="s">'zkx'</span>
</code></pre></div></div>

<h3 id="替换">替换</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">"zkx is a bad man"</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"bad"</span><span class="p">,</span><span class="s">"good"</span><span class="p">)</span>
<span class="s">'zkx is a good man'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"zkx"</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"z"</span><span class="p">,</span><span class="s">"k"</span><span class="p">)</span>
<span class="s">'kkx'</span>
</code></pre></div></div>

<h3 id="查找索引">查找索引</h3>

<p>查找字符第一次在字符串出现的索引</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">"animal"</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">"m"</span><span class="p">)</span>
<span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"zkx,zkx,zkx"</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">"zkx"</span><span class="p">)</span>
<span class="mi">0</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"zkx,wangli,liwang"</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">"wang"</span><span class="p">)</span>
<span class="mi">4</span>
</code></pre></div></div>

<p>如果查不到会报异常，可以用try .. except处理</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">try</span><span class="p">:</span>
    <span class="s">"zkx"</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">"w"</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"w not found"</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="in的使用">in的使用</h3>

<p>判断一个字符串是不是在另一个字符串中，返回结果为False 或者 True</p>

<h3 id="字符串转义">字符串转义</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">"zkx say: "</span><span class="n">good</span> <span class="n">morning</span><span class="p">.</span><span class="s">""</span>
<span class="nb">SyntaxError</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">syntax</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"zkx say:</span><span class="se">\"</span><span class="s">good morning</span><span class="se">\"</span><span class="s">"</span>
<span class="s">'zkx say:"good morning"'</span>
</code></pre></div></div>

<p>python中用\来转义（escaping)。上面的例子也可以用单引号和双引号轮流用来解决。</p>

<h3 id="换行符">换行符</h3>

<p>字符串中加\n表示换行</p>

<h3 id="切片">切片</h3>

<p>slicing(切片)，可以将可迭代对象中元素的子集，创建为一个新的可迭代对象。切片时顾头不顾尾。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="p">[</span><span class="s">"zkx"</span><span class="p">,</span><span class="s">"is"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"good"</span><span class="p">,</span><span class="s">"man"</span><span class="p">][:</span><span class="mi">3</span><span class="p">]</span>
<span class="p">[</span><span class="s">'zkx'</span><span class="p">,</span> <span class="s">'is'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">]</span>
<span class="p">[</span><span class="s">"zkx"</span><span class="p">,</span><span class="s">"is"</span><span class="p">,</span><span class="s">"a"</span><span class="p">,</span><span class="s">"good"</span><span class="p">,</span><span class="s">"man"</span><span class="p">][:</span><span class="mi">4</span><span class="p">]</span>
<span class="p">[</span><span class="s">'zkx'</span><span class="p">,</span> <span class="s">'is'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'good'</span><span class="p">]</span>
</code></pre></div></div>

<p>注意：[0:4]=[:4]</p>

<p>​			[2:5]=[2:] 一直到末尾</p>

<p>​           头和尾的索引可以省略，如果均空，表示返回原可迭代对像</p>

<p>​           有一点奇怪[“zkx”,”is”,”a”,”good”,”man”][2:100]好像也没有报错。</p>

:ET